# EcoFinds API Specification
# RESTful API Endpoints for Django REST Framework + React

api_version: "v1"
base_url: "/api/v1"

endpoints:
  # Authentication Endpoints
  auth:
    register:
      path: "/auth/register/"
      methods: ["POST"]
      request:
        email: "string"
        password: "string"
        password_confirm: "string"
        username: "string"
      response:
        success:
          status: 201
          data:
            id: "integer"
            email: "string"
            username: "string"
            access_token: "string"
            refresh_token: "string"
            created_at: "datetime"
        error:
          status: 400
          data:
            errors: "object"
            message: "string"

    login:
      path: "/auth/login/"
      methods: ["POST"]
      request:
        email: "string"
        password: "string"
      response:
        success:
          status: 200
          data:
            id: "integer"
            email: "string"
            username: "string"
            access_token: "string"
            refresh_token: "string"
        error:
          status: 401
          data:
            message: "string"

    logout:
      path: "/auth/logout/"
      methods: ["POST"]
      headers:
        Authorization: "Bearer <access_token>"
      request:
        refresh_token: "string"
      response:
        success:
          status: 200
          data:
            message: "string"

    refresh_token:
      path: "/auth/refresh/"
      methods: ["POST"]
      request:
        refresh_token: "string"
      response:
        success:
          status: 200
          data:
            access_token: "string"
            refresh_token: "string"

  # User Profile Endpoints
  users:
    profile:
      path: "/users/profile/"
      methods: ["GET", "PUT", "PATCH"]
      headers:
        Authorization: "Bearer <access_token>"
      request:
        PUT/PATCH:
          username: "string (optional)"
          first_name: "string (optional)"
          last_name: "string (optional)"
          phone: "string (optional)"
          address: "string (optional)"
          city: "string (optional)"
          state: "string (optional)"
          zip_code: "string (optional)"
          profile_image: "file (optional)"
      response:
        GET:
          status: 200
          data:
            id: "integer"
            email: "string"
            username: "string"
            first_name: "string"
            last_name: "string"
            phone: "string"
            address: "string"
            city: "string"
            state: "string"
            zip_code: "string"
            profile_image_url: "string"
            created_at: "datetime"
            updated_at: "datetime"
        PUT/PATCH:
          status: 200
          data:
            id: "integer"
            email: "string"
            username: "string"
            first_name: "string"
            last_name: "string"
            phone: "string"
            address: "string"
            city: "string"
            state: "string"
            zip_code: "string"
            profile_image_url: "string"
            updated_at: "datetime"

    dashboard:
      path: "/users/dashboard/"
      methods: ["GET"]
      headers:
        Authorization: "Bearer <access_token>"
      response:
        success:
          status: 200
          data:
            user_info:
              id: "integer"
              username: "string"
              email: "string"
              profile_image_url: "string"
            statistics:
              total_listings: "integer"
              active_listings: "integer"
              sold_items: "integer"
              total_purchases: "integer"
              cart_items_count: "integer"
            recent_activity:
              - type: "string"
                description: "string"
                timestamp: "datetime"

  # Product Listings Endpoints
  products:
    list_create:
      path: "/products/"
      methods: ["GET", "POST"]
      headers:
        Authorization: "Bearer <access_token> (POST only)"
      request:
        GET:
          page: "integer (optional)"
          page_size: "integer (optional)"
          search: "string (optional)"
          category: "string (optional)"
          min_price: "decimal (optional)"
          max_price: "decimal (optional)"
          sort_by: "string (optional) [price_asc, price_desc, date_asc, date_desc]"
        POST:
          title: "string"
          description: "string"
          category: "string"
          price: "decimal"
          image: "file (optional)"
          condition: "string (optional) [new, like_new, good, fair, poor]"
          location: "string (optional)"
      response:
        GET:
          status: 200
          data:
            count: "integer"
            next: "string (url)"
            previous: "string (url)"
            results:
              - id: "integer"
                title: "string"
                description: "string"
                category: "string"
                price: "decimal"
                image_url: "string"
                condition: "string"
                location: "string"
                seller:
                  id: "integer"
                  username: "string"
                  profile_image_url: "string"
                is_sold: "boolean"
                created_at: "datetime"
                updated_at: "datetime"
        POST:
          status: 201
          data:
            id: "integer"
            title: "string"
            description: "string"
            category: "string"
            price: "decimal"
            image_url: "string"
            condition: "string"
            location: "string"
            seller_id: "integer"
            is_sold: "boolean"
            created_at: "datetime"

    detail_update_delete:
      path: "/products/{id}/"
      methods: ["GET", "PUT", "PATCH", "DELETE"]
      headers:
        Authorization: "Bearer <access_token> (PUT, PATCH, DELETE only)"
      request:
        PUT/PATCH:
          title: "string (optional for PATCH)"
          description: "string (optional for PATCH)"
          category: "string (optional for PATCH)"
          price: "decimal (optional for PATCH)"
          image: "file (optional)"
          condition: "string (optional)"
          location: "string (optional)"
          is_sold: "boolean (optional)"
      response:
        GET:
          status: 200
          data:
            id: "integer"
            title: "string"
            description: "string"
            category: "string"
            price: "decimal"
            image_url: "string"
            condition: "string"
            location: "string"
            seller:
              id: "integer"
              username: "string"
              email: "string"
              profile_image_url: "string"
            is_sold: "boolean"
            view_count: "integer"
            created_at: "datetime"
            updated_at: "datetime"
        PUT/PATCH:
          status: 200
          data:
            id: "integer"
            title: "string"
            description: "string"
            category: "string"
            price: "decimal"
            image_url: "string"
            condition: "string"
            location: "string"
            seller_id: "integer"
            is_sold: "boolean"
            updated_at: "datetime"
        DELETE:
          status: 204
          data: null

    my_listings:
      path: "/products/my-listings/"
      methods: ["GET"]
      headers:
        Authorization: "Bearer <access_token>"
      request:
        page: "integer (optional)"
        page_size: "integer (optional)"
        status: "string (optional) [active, sold, all]"
      response:
        success:
          status: 200
          data:
            count: "integer"
            next: "string (url)"
            previous: "string (url)"
            results:
              - id: "integer"
                title: "string"
                description: "string"
                category: "string"
                price: "decimal"
                image_url: "string"
                condition: "string"
                location: "string"
                is_sold: "boolean"
                view_count: "integer"
                created_at: "datetime"
                updated_at: "datetime"

  # Categories Endpoint
  categories:
    list:
      path: "/categories/"
      methods: ["GET"]
      response:
        success:
          status: 200
          data:
            - id: "integer"
              name: "string"
              slug: "string"
              description: "string"
              icon: "string"
              product_count: "integer"

  # Cart Endpoints
  cart:
    list_add:
      path: "/cart/"
      methods: ["GET", "POST"]
      headers:
        Authorization: "Bearer <access_token>"
      request:
        POST:
          product_id: "integer"
          quantity: "integer (default: 1)"
      response:
        GET:
          status: 200
          data:
            id: "integer"
            user_id: "integer"
            items:
              - id: "integer"
                product:
                  id: "integer"
                  title: "string"
                  price: "decimal"
                  image_url: "string"
                  seller:
                    id: "integer"
                    username: "string"
                quantity: "integer"
                added_at: "datetime"
            total_items: "integer"
            total_price: "decimal"
            updated_at: "datetime"
        POST:
          status: 201
          data:
            message: "string"
            cart_item:
              id: "integer"
              product_id: "integer"
              quantity: "integer"
              added_at: "datetime"

    update_remove:
      path: "/cart/items/{id}/"
      methods: ["PATCH", "DELETE"]
      headers:
        Authorization: "Bearer <access_token>"
      request:
        PATCH:
          quantity: "integer"
      response:
        PATCH:
          status: 200
          data:
            id: "integer"
            product_id: "integer"
            quantity: "integer"
            updated_at: "datetime"
        DELETE:
          status: 204
          data: null

    clear:
      path: "/cart/clear/"
      methods: ["DELETE"]
      headers:
        Authorization: "Bearer <access_token>"
      response:
        success:
          status: 200
          data:
            message: "string"

  # Purchase/Order Endpoints
  purchases:
    create:
      path: "/purchases/"
      methods: ["POST"]
      headers:
        Authorization: "Bearer <access_token>"
      request:
        cart_id: "integer (optional)"
        items:
          - product_id: "integer"
            quantity: "integer"
            price: "decimal"
        shipping_address: "string"
        payment_method: "string"
        total_amount: "decimal"
      response:
        success:
          status: 201
          data:
            id: "integer"
            order_number: "string"
            buyer_id: "integer"
            items:
              - id: "integer"
                product:
                  id: "integer"
                  title: "string"
                  price: "decimal"
                quantity: "integer"
                price_at_purchase: "decimal"
            shipping_address: "string"
            payment_method: "string"
            total_amount: "decimal"
            status: "string"
            created_at: "datetime"

    list:
      path: "/purchases/history/"
      methods: ["GET"]
      headers:
        Authorization: "Bearer <access_token>"
      request:
        page: "integer (optional)"
        page_size: "integer (optional)"
        status: "string (optional) [pending, completed, cancelled]"
        date_from: "date (optional)"
        date_to: "date (optional)"
      response:
        success:
          status: 200
          data:
            count: "integer"
            next: "string (url)"
            previous: "string (url)"
            results:
              - id: "integer"
                order_number: "string"
                items:
                  - product:
                      id: "integer"
                      title: "string"
                      image_url: "string"
                    quantity: "integer"
                    price_at_purchase: "decimal"
                total_amount: "decimal"
                status: "string"
                created_at: "datetime"
                completed_at: "datetime"

    detail:
      path: "/purchases/{id}/"
      methods: ["GET"]
      headers:
        Authorization: "Bearer <access_token>"
      response:
        success:
          status: 200
          data:
            id: "integer"
            order_number: "string"
            buyer:
              id: "integer"
              username: "string"
              email: "string"
            items:
              - id: "integer"
                product:
                  id: "integer"
                  title: "string"
                  description: "string"
                  image_url: "string"
                  seller:
                    id: "integer"
                    username: "string"
                quantity: "integer"
                price_at_purchase: "decimal"
            shipping_address: "string"
            payment_method: "string"
            total_amount: "decimal"
            status: "string"
            created_at: "datetime"
            completed_at: "datetime"

  # Search Endpoint
  search:
    products:
      path: "/search/"
      methods: ["GET"]
      request:
        q: "string"
        category: "string (optional)"
        min_price: "decimal (optional)"
        max_price: "decimal (optional)"
        condition: "string (optional)"
        location: "string (optional)"
        sort_by: "string (optional)"
        page: "integer (optional)"
        page_size: "integer (optional)"
      response:
        success:
          status: 200
          data:
            query: "string"
            count: "integer"
            next: "string (url)"
            previous: "string (url)"
            filters_applied:
              category: "string"
              price_range: "object"
              condition: "string"
            results:
              - id: "integer"
                title: "string"
                description: "string"
                category: "string"
                price: "decimal"
                image_url: "string"
                condition: "string"
                location: "string"
                seller:
                  id: "integer"
                  username: "string"
                relevance_score: "float"
                created_at: "datetime"